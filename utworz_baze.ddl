-- Generated by Oracle SQL Developer Data Modeler 18.3.0.268.1156
--   at:        2020-07-20 11:05:45 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE badania_rynku (
    id_badania_rynku           NUMBER(6) NOT NULL,
    numer_rundy                NUMBER(5) NOT NULL,
    his_zakupow_liczba_rund    NUMBER(5) DEFAULT 0 NOT NULL,
    id_marki                   NUMBER(6) NOT NULL,
    id_grupy_konsumentow       NUMBER(5) NOT NULL,
    koszt_badania_rynku        NUMBER(15) NOT NULL,
    uwzglednic_jakosc          CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    uwzglednic_cene            CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    uwzglednic_his_zakupow     CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    uwzglednic_marketing       CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    uwzg_marketing_ost_runda   CHAR(1 CHAR) DEFAULT 'n' NOT NULL
);

ALTER TABLE badania_rynku
    ADD CHECK ( uwzglednic_jakosc IN (
        'n',
        't'
    ) );

ALTER TABLE badania_rynku
    ADD CHECK ( uwzglednic_cene IN (
        'n',
        't'
    ) );

ALTER TABLE badania_rynku
    ADD CHECK ( uwzglednic_his_zakupow IN (
        'n',
        't'
    ) );

ALTER TABLE badania_rynku
    ADD CHECK ( uwzglednic_marketing IN (
        'n',
        't'
    ) );

ALTER TABLE badania_rynku
    ADD CHECK ( uwzg_marketing_ost_runda IN (
        'n',
        't'
    ) );

CREATE INDEX badania_rynku_nry_rund_fk_idx ON
    badania_rynku (
        numer_rundy
    ASC );

CREATE INDEX badania_rynku_marki_fk_idx ON
    badania_rynku (
        id_marki
    ASC );

CREATE INDEX badania_rynku_gr_kons_fk_idx ON
    badania_rynku (
        id_grupy_konsumentow
    ASC );

ALTER TABLE badania_rynku ADD CONSTRAINT badania_rynku_pk PRIMARY KEY ( id_badania_rynku );

CREATE TABLE dostepy_producentow_his_zakup (
    id_konsumenta      NUMBER(10) NOT NULL,
    numer_rundy        NUMBER(5) NOT NULL,
    id_badania_rynku   NUMBER(6) NOT NULL
);

CREATE INDEX dost_prod_badania_rynku_fk_idx ON
    dostepy_producentow_his_zakup (
        id_badania_rynku
    ASC );

ALTER TABLE dostepy_producentow_his_zakup
    ADD CONSTRAINT dost_producentow_his_zakup_pk PRIMARY KEY ( id_konsumenta,
                                                               numer_rundy,
                                                               id_badania_rynku );

CREATE TABLE grupy_konsumentow (
    id_grupy_konsumentow         NUMBER(5) NOT NULL,
    koszt_uzyskania_ocen         NUMBER(10) NOT NULL,
    koszt_his_zakup_jedna_tura   NUMBER(10) NOT NULL,
    opis                         VARCHAR2(200 CHAR)
);

ALTER TABLE grupy_konsumentow ADD CONSTRAINT grupy_konsumentow_pk PRIMARY KEY ( id_grupy_konsumentow );

CREATE TABLE historie_cen (
    cena          NUMBER(8) NOT NULL,
    id_marki      NUMBER(6) NOT NULL,
    numer_rundy   NUMBER(5) NOT NULL
);

CREATE INDEX historie_cen_nry_rund_fk_idx ON
    historie_cen (
        numer_rundy
    ASC );

ALTER TABLE historie_cen ADD CONSTRAINT historie_cen_pk PRIMARY KEY ( id_marki,
                                                                      numer_rundy );

CREATE TABLE jakosci_marek (
    jakosc_marki                 NUMBER(2) NOT NULL,
    ref_koszt_produkcji_sztuki   NUMBER(8) NOT NULL
);

ALTER TABLE jakosci_marek ADD CONSTRAINT jakosci_marek_pk PRIMARY KEY ( jakosc_marki );

CREATE TABLE konsumenci (
    id_konsumenta                    NUMBER(10) NOT NULL,
    cena_poziom_aspiracji            NUMBER(5) NOT NULL,
    cena_poziom_rezerwacji           NUMBER(5) NOT NULL,
    jakosc_poziom_aspiracji          NUMBER(2) NOT NULL,
    jakosc_poziom_rezerwacji         NUMBER(2) NOT NULL,
    przywiazanie_poziom_aspiracji    NUMBER(4, 2) NOT NULL,
    przywiazanie_poziom_rezerwacji   NUMBER(4, 2) NOT NULL,
    podatnosc_na_marketing           NUMBER(2, 2) NOT NULL
);

ALTER TABLE konsumenci ADD CONSTRAINT konsumenci_pk PRIMARY KEY ( id_konsumenta );

CREATE TABLE magazynowania (
    wolumen               NUMBER(8) NOT NULL,
    koszt_magazynowania   NUMBER(12) NOT NULL,
    numer_rundy           NUMBER(5) NOT NULL,
    id_marki              NUMBER(6) NOT NULL
);

CREATE INDEX magazynowania_nry_rund_fk_idx ON
    magazynowania (
        numer_rundy
    ASC );

ALTER TABLE magazynowania ADD CONSTRAINT magazynowania_pk PRIMARY KEY ( id_marki,
                                                                        numer_rundy );

CREATE TABLE marketingi (
    id_marketingu             NUMBER(12) NOT NULL,
    numer_rundy               NUMBER(5) NOT NULL,
    intensywnosc_marketingu   NUMBER(3) DEFAULT 1 NOT NULL,
    koszt_marketingu          NUMBER(12) NOT NULL,
    id_marki                  NUMBER(6) NOT NULL
);

ALTER TABLE marketingi ADD CHECK ( intensywnosc_marketingu BETWEEN 1 AND 100 );

COMMENT ON COLUMN marketingi.intensywnosc_marketingu IS
    'Okresla, jak intensywna ma byc kampania marketingowa, to znaczy ile i jakie reklamy zobacza konsumenci, a w konsekwencji jak duzy wplyw zostanie na nich wywarty.Przyjmuje wartosci od 1 do 100.'
    ;

COMMENT ON COLUMN marketingi.koszt_marketingu IS
    'Koszt operacji - jest liczony w oparciu o dane z tabeli USTAWIENIA_POCZATKOWE i zapisywany, poniewaz dane te moga sie zmieniac w trakcie rozgrywki.'
    ;

CREATE INDEX marketingi_nry_rund_fk_idx ON
    marketingi (
        numer_rundy
    ASC );

CREATE INDEX marketingi_marki_fk_idx ON
    marketingi (
        id_marki
    ASC );

ALTER TABLE marketingi ADD CONSTRAINT marketingi_pk PRIMARY KEY ( id_marketingu );

CREATE TABLE marki (
    id_marki                 NUMBER(6) NOT NULL,
    id_producenta            NUMBER(3) NOT NULL,
    nazwa_marki              VARCHAR2(20 CHAR) NOT NULL,
    jakosc_marki             NUMBER(2) NOT NULL,
    koszt_produkcji_sztuki   NUMBER(8) NOT NULL,
    cena_za_sztuke           NUMBER(8) NOT NULL,
    czy_utworzona            CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    aktualna_liczba_sztuk    NUMBER(15) DEFAULT 0 NOT NULL
);

ALTER TABLE marki
    ADD CHECK ( czy_utworzona IN (
        'n',
        't'
    ) );

COMMENT ON COLUMN marki.czy_utworzona IS
    '''t'' - tak
''n'' - nie';

CREATE INDEX marki_producenci_fk_idx ON
    marki (
        id_producenta
    ASC );

CREATE INDEX marki_jakosci_marek_fk_idx ON
    marki (
        jakosc_marki
    ASC );

ALTER TABLE marki ADD CONSTRAINT marki_pk PRIMARY KEY ( id_marki );

ALTER TABLE marki ADD CONSTRAINT marki_nazwa_marki_un UNIQUE ( nazwa_marki );

CREATE TABLE numery_rund (
    numer_rundy   NUMBER(5) NOT NULL
);

ALTER TABLE numery_rund ADD CONSTRAINT numery_rund_pk PRIMARY KEY ( numer_rundy );

CREATE TABLE oceny_marek (
    id_konsumenta      NUMBER(10) NOT NULL,
    id_badania_rynku   NUMBER(6) NOT NULL,
    ocena              NUMBER(8, 4) NOT NULL
);

CREATE INDEX oceny_marek_bad_rynku_fk_idx ON
    oceny_marek (
        id_badania_rynku
    ASC );

ALTER TABLE oceny_marek ADD CONSTRAINT oceny_marek_pk PRIMARY KEY ( id_konsumenta,
                                                                    id_badania_rynku );

CREATE TABLE producenci (
    id_producenta      NUMBER(3) NOT NULL,
    nazwa_producenta   VARCHAR2(30 CHAR) NOT NULL,
    fundusze           NUMBER(14) NOT NULL,
    czy_spasowal       CHAR(1 CHAR) DEFAULT 'n' NOT NULL
);

ALTER TABLE producenci
    ADD CHECK ( czy_spasowal IN (
        'n',
        't'
    ) );

COMMENT ON COLUMN producenci.czy_spasowal IS
    '''n'' - NIE
''t'' - TAK';

ALTER TABLE producenci ADD CONSTRAINT producenci_pk PRIMARY KEY ( id_producenta );

ALTER TABLE producenci ADD CONSTRAINT producenci_nazwa_producenta_un UNIQUE ( nazwa_producenta );

CREATE TABLE produkcje (
    id_produkcji      NUMBER(12) NOT NULL,
    wolumen           NUMBER(10) NOT NULL,
    koszt_produkcji   NUMBER(12) NOT NULL,
    numer_rundy       NUMBER(5) NOT NULL,
    id_marki          NUMBER(6) NOT NULL
);

CREATE INDEX produkcje_nry_rund_fk_idx ON
    produkcje (
        numer_rundy
    ASC );

CREATE INDEX produkcje_marki_fk_idx ON
    produkcje (
        id_marki
    ASC );

ALTER TABLE produkcje ADD CONSTRAINT produkcje_pk PRIMARY KEY ( id_produkcji );

CREATE TABLE przynaleznosci_do_grup (
    id_konsumenta          NUMBER(10) NOT NULL,
    id_grupy_konsumentow   NUMBER(5) NOT NULL
);

CREATE INDEX przyn_do_grup_gr_kons_fk_idx ON
    przynaleznosci_do_grup (
        id_grupy_konsumentow
    ASC );

ALTER TABLE przynaleznosci_do_grup ADD CONSTRAINT przynaleznosci_do_grup_pk PRIMARY KEY ( id_konsumenta,
                                                                                          id_grupy_konsumentow );

CREATE TABLE ustawienia_poczatkowe (
    numer_zestawu                    NUMBER(2) NOT NULL,
    czy_aktywna                      CHAR(1 CHAR) DEFAULT 'n' NOT NULL,
    warunek_zakonczenia_rundy        CHAR(1 CHAR) NOT NULL,
    czas_rundy                       NUMBER(4),
    liczba_rund                      NUMBER(5),
    poczatkowe_fundusze              NUMBER(8) NOT NULL,
    koszt_utworzenia_marki           NUMBER(8) NOT NULL,
    marketing_koszt_bazowy           NUMBER(8) NOT NULL,
    marketing_koszt_per_st_intes     NUMBER(8) NOT NULL,
    liczba_konsumentow               NUMBER(10) NOT NULL,
    wym_max_cena                     NUMBER(10) NOT NULL,
    wym_min_cena                     NUMBER(10) NOT NULL,
    wym_kons_max_roznica_cena        NUMBER(10) NOT NULL,
    wym_kons_min_roznica_cena        NUMBER(10) NOT NULL,
    wym_kons_max_roznica_jakosc      NUMBER(2) NOT NULL,
    wym_kons_min_roznica_jakosc      NUMBER(2) NOT NULL,
    wym_kons_max_roznica_his_zak     NUMBER(3, 2) DEFAULT 0.8 NOT NULL,
    wym_kons_min_roznica_his_zak     NUMBER(3, 2) DEFAULT 0.2 NOT NULL,
    wym_kons_max_roznica_marketing   NUMBER(3) NOT NULL,
    wym_kons_min_roznica_marketing   NUMBER(2) NOT NULL,
    sposob_nalicz_koszt_magazyn      CHAR(1 CHAR) DEFAULT 'm' NOT NULL,
    wielkosc_powierzchni_mag         NUMBER(12),
    koszt_mag_sztuki_lub_magazynu    NUMBER(15) NOT NULL,
    upust_za_kolejny_magazyn         NUMBER(2),
    czy_jakosci_marek_domyslne       CHAR(1 CHAR) NOT NULL,
    opis                             VARCHAR2(200 CHAR)
);

ALTER TABLE ustawienia_poczatkowe
    ADD CHECK ( czy_aktywna IN (
        'a',
        'n'
    ) );

ALTER TABLE ustawienia_poczatkowe
    ADD CHECK ( wym_kons_max_roznica_his_zak BETWEEN 0.1 AND 1 );

ALTER TABLE ustawienia_poczatkowe
    ADD CHECK ( wym_kons_min_roznica_his_zak BETWEEN 0.1 AND 1 );

ALTER TABLE ustawienia_poczatkowe ADD CHECK ( wym_kons_max_roznica_marketing BETWEEN 10 AND 100 );

ALTER TABLE ustawienia_poczatkowe
    ADD CHECK ( sposob_nalicz_koszt_magazyn IN (
        'l',
        'm'
    ) );

COMMENT ON COLUMN ustawienia_poczatkowe.czy_aktywna IS
    '''a'' - aktywna. Ustawiona flaga aktywnosci oznacza, ze z tego zestawu beda pobierane ustawienia na rzecz rozgrywki; tylko jednen zestaw ustawien poczatkowych moze miec ustawiona te flage. Jesli nie ma zaden, wowczas gra pobiera dane z pierwszego zestawu'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.warunek_zakonczenia_rundy IS
    '''t'' - up�yn�� okre�lony czas
''m'' - wszyscy gracz wykonali ruch
''b'' - up�yn�� okre�lony czas lub wszyscy gracze wykonali ruch '
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.czas_rundy IS
    'Czas w godzinach. Je�li jest wybrana opcja, w kt�rej warunkiem zako�czenia rundy jest ruch wszystkich graczy, w�wczas czas nie jest brany pod uwag�.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.marketing_koszt_per_st_intes IS
    'Koszt marketingu za kazdy stopien (punkt) intensywnosci marketingu.';

COMMENT ON COLUMN ustawienia_poczatkowe.wym_max_cena IS
    'Wymagania konsumenta - maksymalna wartosc poziomu rezerwacji konsumenta w kryterium ceny.';

COMMENT ON COLUMN ustawienia_poczatkowe.wym_min_cena IS
    'Wymagania konsumenta - mnimalna wartosc poziomu aspiracji konsumenta w kryterium ceny.';

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_max_roznica_cena IS
    'Wymagania konsumenta - mozliwa maksymalna roznica miedzy poziomem rezerwacji a poziomiem aspiracji konsumenta w kryterium ceny.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_min_roznica_cena IS
    'Wymagania konsumenta - mozliwa minimalna roznica miedzy poziomem rezerwacji a poziomiem aspiracji konsumenta w kryterium ceny.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_max_roznica_jakosc IS
    'Wymagania konsumenta - mozliwa maksymalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium jakosci.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_min_roznica_jakosc IS
    'Wymagania konsumenta - mozliwa minimalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium jakosci.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_max_roznica_his_zak IS
    'Wymagania konsumenta - mozliwa maksymalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium przywiazania do marki.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_min_roznica_his_zak IS
    'Wymagania konsumenta - mozliwa minimalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium przywiazania do marki.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_max_roznica_marketing IS
    'Wymagania konsumenta - mozliwa maksymalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium przywiazania do marki.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.wym_kons_min_roznica_marketing IS
    'Wymagania konsumenta - mozliwa maksymalna roznica miedzy poziomem aspiracji a poziomiem rezerwacji konsumenta w kryterium przywiazania do marki.'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.sposob_nalicz_koszt_magazyn IS
    '''l'' - liniowy
''m'' - producent placi za magazyn o okreslonej wielkosci, niezaleznie od stopnia zapelnienia';

COMMENT ON COLUMN ustawienia_poczatkowe.wielkosc_powierzchni_mag IS
    'Okre�la wielkosc powierzchni magazynowej, czyli ile maksymalnie sztuk towaru zmiesci sie na powierzchni magazynowej.';

COMMENT ON COLUMN ustawienia_poczatkowe.koszt_mag_sztuki_lub_magazynu IS
    'Koszt zmagazynowania jednej sztuki (jesli obowiazuje liniowe naliczanie oplat) lub calego przedzialu (jesli obowiazuje naliczanie oplat zwiazane z powierzchnia magazynowa).'
    ;

COMMENT ON COLUMN ustawienia_poczatkowe.upust_za_kolejny_magazyn IS
    'Jaki upust (w %) dostanie gracz za kazda kolejna (poza pierwsza) wykorzystana przestrzenia magazynowa.';

COMMENT ON COLUMN ustawienia_poczatkowe.czy_jakosci_marek_domyslne IS
    '''t'' - TAK
''n'' - NIE';

ALTER TABLE ustawienia_poczatkowe ADD CONSTRAINT ustawienia_poczatkowe_pk PRIMARY KEY ( numer_zestawu );

CREATE TABLE zakupy_konsumentow (
    numer_rundy     NUMBER(5) NOT NULL,
    id_konsumenta   NUMBER(10) NOT NULL,
    id_marki        NUMBER(6) NOT NULL
);

CREATE INDEX zakupy_kons_nry_rund_fk_idx ON
    zakupy_konsumentow (
        numer_rundy
    ASC );

CREATE INDEX zakupy_kons_marki_fk_idx ON
    zakupy_konsumentow (
        id_marki
    ASC );

ALTER TABLE zakupy_konsumentow ADD CONSTRAINT zakupy_konsumentow_pk PRIMARY KEY ( id_konsumenta,
                                                                                  numer_rundy );

ALTER TABLE badania_rynku
    ADD CONSTRAINT badania_rynku_gr_kons_fk FOREIGN KEY ( id_grupy_konsumentow )
        REFERENCES grupy_konsumentow ( id_grupy_konsumentow )
            ON DELETE CASCADE;

ALTER TABLE badania_rynku
    ADD CONSTRAINT badania_rynku_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki );

ALTER TABLE badania_rynku
    ADD CONSTRAINT badania_rynku_numery_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE dostepy_producentow_his_zakup
    ADD CONSTRAINT dost_prod_badania_rynku_fk FOREIGN KEY ( id_badania_rynku )
        REFERENCES badania_rynku ( id_badania_rynku )
            ON DELETE CASCADE;

ALTER TABLE dostepy_producentow_his_zakup
    ADD CONSTRAINT dost_prod_zakupy_kons_fk FOREIGN KEY ( id_konsumenta,
                                                          numer_rundy )
        REFERENCES zakupy_konsumentow ( id_konsumenta,
                                        numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE historie_cen
    ADD CONSTRAINT historie_cen_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki )
            ON DELETE CASCADE;

ALTER TABLE historie_cen
    ADD CONSTRAINT historie_cen_numery_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE magazynowania
    ADD CONSTRAINT magazynowania_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki )
            ON DELETE CASCADE;

ALTER TABLE magazynowania
    ADD CONSTRAINT magazynowania_numery_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE marketingi
    ADD CONSTRAINT marketingi_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki )
            ON DELETE CASCADE;

ALTER TABLE marketingi
    ADD CONSTRAINT marketingi_numery_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE marki
    ADD CONSTRAINT marki_jakosci_marek_fk FOREIGN KEY ( jakosc_marki )
        REFERENCES jakosci_marek ( jakosc_marki )
            ON DELETE CASCADE;

ALTER TABLE marki
    ADD CONSTRAINT marki_producenci_fk FOREIGN KEY ( id_producenta )
        REFERENCES producenci ( id_producenta )
            ON DELETE CASCADE;

ALTER TABLE oceny_marek
    ADD CONSTRAINT oceny_marek_badania_rynku_fk FOREIGN KEY ( id_badania_rynku )
        REFERENCES badania_rynku ( id_badania_rynku )
            ON DELETE CASCADE;

ALTER TABLE oceny_marek
    ADD CONSTRAINT oceny_marek_konsumenci_fk FOREIGN KEY ( id_konsumenta )
        REFERENCES konsumenci ( id_konsumenta )
            ON DELETE CASCADE;

ALTER TABLE produkcje
    ADD CONSTRAINT produkcje_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki )
            ON DELETE CASCADE;

ALTER TABLE produkcje
    ADD CONSTRAINT produkcje_numery_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

ALTER TABLE przynaleznosci_do_grup
    ADD CONSTRAINT przyn_do_grup_gr_konsument_fk FOREIGN KEY ( id_grupy_konsumentow )
        REFERENCES grupy_konsumentow ( id_grupy_konsumentow )
            ON DELETE CASCADE;

ALTER TABLE przynaleznosci_do_grup
    ADD CONSTRAINT przyn_do_grup_konsumenci_fk FOREIGN KEY ( id_konsumenta )
        REFERENCES konsumenci ( id_konsumenta )
            ON DELETE CASCADE;

ALTER TABLE zakupy_konsumentow
    ADD CONSTRAINT zakupy_konsumentow_kons_fk FOREIGN KEY ( id_konsumenta )
        REFERENCES konsumenci ( id_konsumenta )
            ON DELETE CASCADE;

ALTER TABLE zakupy_konsumentow
    ADD CONSTRAINT zakupy_konsumentow_marki_fk FOREIGN KEY ( id_marki )
        REFERENCES marki ( id_marki )
            ON DELETE CASCADE;

ALTER TABLE zakupy_konsumentow
    ADD CONSTRAINT zakupy_konsumentow_nry_rund_fk FOREIGN KEY ( numer_rundy )
        REFERENCES numery_rund ( numer_rundy )
            ON DELETE CASCADE;

CREATE OR REPLACE TRIGGER fkntm_badania_rynku BEFORE
    UPDATE OF numer_rundy, id_marki, id_grupy_konsumentow ON badania_rynku
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table BADANIA_RYNKU is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_dostepy_producentow_his_ BEFORE
    UPDATE OF id_konsumenta, numer_rundy, id_badania_rynku ON dostepy_producentow_his_zakup
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table DOSTEPY_PRODUCENTOW_HIS_ZAKUP is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_historie_cen BEFORE
    UPDATE OF id_marki, numer_rundy ON historie_cen
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table HISTORIE_CEN is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_magazynowania BEFORE
    UPDATE OF numer_rundy, id_marki ON magazynowania
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table MAGAZYNOWANIA is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_marketingi BEFORE
    UPDATE OF numer_rundy, id_marki ON marketingi
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table MARKETINGI is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_marki BEFORE
    UPDATE OF id_producenta, jakosc_marki ON marki
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table MARKI is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_oceny_marek BEFORE
    UPDATE OF id_konsumenta, id_badania_rynku ON oceny_marek
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table OCENY_MAREK is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_produkcje BEFORE
    UPDATE OF numer_rundy, id_marki ON produkcje
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table PRODUKCJE is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_przynaleznosci_do_grup BEFORE
    UPDATE OF id_konsumenta, id_grupy_konsumentow ON przynaleznosci_do_grup
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table PRZYNALEZNOSCI_DO_GRUP is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_zakupy_konsumentow BEFORE
    UPDATE OF id_marki, id_konsumenta, numer_rundy ON zakupy_konsumentow
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table ZAKUPY_KONSUMENTOW is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                            16
-- ALTER TABLE                             75
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
